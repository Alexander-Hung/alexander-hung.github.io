{"ast":null,"code":"var _jsxFileName = \"/Users/alexander/Documents/Github/alexander-hung.github.io dev/src/containers/projects/Projects.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext, Suspense, lazy } from \"react\";\nimport \"./Project.scss\";\nimport Button from \"../../components/button/Button\";\nimport { openSource, socialMediaLinks } from \"../../portfolio\";\nimport StyleContext from \"../../contexts/StyleContext\";\nimport Loading from \"../../containers/loading/Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GithubRepoCard = /*#__PURE__*/lazy(_c = () => import(\"../../components/githubRepoCard/GithubRepoCard\"));\n_c2 = GithubRepoCard;\nconst FailedLoading = () => null;\n_c3 = FailedLoading;\nconst renderLoader = () => /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 13,\n  columnNumber: 28\n}, this);\nexport default function Projects() {\n  _s();\n  /* â˜… rename: repos / setRepos */\n  const [repos, setRepos] = useState([]);\n  const {\n    isDark\n  } = useContext(StyleContext);\n  useEffect(() => {\n    fetch(\"/profile.json\").then(r => r.ok ? r.json() : Promise.reject(r)).then(json => {\n      var _ref, _json$data$user$pinne, _json$data, _json$data$user, _json$data$user$pinne2, _json$user, _json$user$pinnedItem;\n      /* ðŸ”Ž optional: see the exact shape once */\n      //console.log(\"profile.json â†’\", json);\n\n      // works whether the file has a top-level data{} or not\n      const edges = (_ref = (_json$data$user$pinne = json === null || json === void 0 ? void 0 : (_json$data = json.data) === null || _json$data === void 0 ? void 0 : (_json$data$user = _json$data.user) === null || _json$data$user === void 0 ? void 0 : (_json$data$user$pinne2 = _json$data$user.pinnedItems) === null || _json$data$user$pinne2 === void 0 ? void 0 : _json$data$user$pinne2.edges) !== null && _json$data$user$pinne !== void 0 ? _json$data$user$pinne : json === null || json === void 0 ? void 0 : (_json$user = json.user) === null || _json$user === void 0 ? void 0 : (_json$user$pinnedItem = _json$user.pinnedItems) === null || _json$user$pinnedItem === void 0 ? void 0 : _json$user$pinnedItem.edges) !== null && _ref !== void 0 ? _ref : [];\n      setRepos(edges);\n    }).catch(err => {\n      console.error(err);\n      setRepos(\"Error\");\n    });\n  }, []);\n\n  /* â˜… guard uses repos */\n  if (typeof repos === \"string\" || !openSource.display) {\n    return /*#__PURE__*/_jsxDEV(FailedLoading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: renderLoader(),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      id: \"opensource\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"project-title\",\n        children: \"Github\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"repo-cards-div-main\",\n        children: repos.map((edge, i) => {\n          if (!edge) return null;\n          const imgSrc = `${process.env.PUBLIC_URL}/project-images/${edge.node.name}/showcase.png`;\n          return /*#__PURE__*/_jsxDEV(GithubRepoCard, {\n            repo: edge,\n            isDark: isDark,\n            imgSrc: imgSrc\n          }, edge.node.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        text: \"More Projects\",\n        className: \"project-button\",\n        href: socialMediaLinks.github,\n        newTab: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(Projects, \"MQFbjtzQ343HM/SNy6igqDfAo8w=\");\n_c4 = Projects;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"GithubRepoCard$lazy\");\n$RefreshReg$(_c2, \"GithubRepoCard\");\n$RefreshReg$(_c3, \"FailedLoading\");\n$RefreshReg$(_c4, \"Projects\");","map":{"version":3,"names":["React","useState","useEffect","useContext","Suspense","lazy","Button","openSource","socialMediaLinks","StyleContext","Loading","jsxDEV","_jsxDEV","GithubRepoCard","_c","_c2","FailedLoading","_c3","renderLoader","fileName","_jsxFileName","lineNumber","columnNumber","Projects","_s","repos","setRepos","isDark","fetch","then","r","ok","json","Promise","reject","_ref","_json$data$user$pinne","_json$data","_json$data$user","_json$data$user$pinne2","_json$user","_json$user$pinnedItem","edges","data","user","pinnedItems","catch","err","console","error","display","fallback","children","className","id","map","edge","i","imgSrc","process","env","PUBLIC_URL","node","name","repo","text","href","github","newTab","_c4","$RefreshReg$"],"sources":["/Users/alexander/Documents/Github/alexander-hung.github.io dev/src/containers/projects/Projects.js"],"sourcesContent":["import React, { useState, useEffect, useContext, Suspense, lazy } from \"react\";\nimport \"./Project.scss\";\nimport Button from \"../../components/button/Button\";\nimport { openSource, socialMediaLinks } from \"../../portfolio\";\nimport StyleContext from \"../../contexts/StyleContext\";\nimport Loading from \"../../containers/loading/Loading\";\n\nconst GithubRepoCard = lazy(() =>\n  import(\"../../components/githubRepoCard/GithubRepoCard\")\n);\n\nconst FailedLoading = () => null;\nconst renderLoader = () => <Loading />;\n\nexport default function Projects() {\n  /* â˜… rename: repos / setRepos */\n  const [repos, setRepos] = useState([]);\n  const { isDark } = useContext(StyleContext);\n\n  useEffect(() => {\n    fetch(\"/profile.json\")\n      .then((r) => (r.ok ? r.json() : Promise.reject(r)))\n      .then((json) => {\n        /* ðŸ”Ž optional: see the exact shape once */\n        //console.log(\"profile.json â†’\", json);\n\n        // works whether the file has a top-level data{} or not\n        const edges =\n          json?.data?.user?.pinnedItems?.edges ??\n          json?.user?.pinnedItems?.edges ??\n          [];\n\n        setRepos(edges);\n      })\n      .catch((err) => {\n        console.error(err);\n        setRepos(\"Error\");\n      });\n  }, []);\n\n\n  /* â˜… guard uses repos */\n  if (typeof repos === \"string\" || !openSource.display) {\n    return <FailedLoading />;\n  }\n\n  return (\n    <Suspense fallback={renderLoader()}>\n      <div className=\"main\" id=\"opensource\">\n        <h1 className=\"project-title\">Github</h1>\n\n        <div className=\"repo-cards-div-main\">\n          {repos.map((edge, i) => {\n            if (!edge) return null;\n\n            const imgSrc = `${process.env.PUBLIC_URL}/project-images/${edge.node.name}/showcase.png`;\n\n            return (\n              <GithubRepoCard\n                key={edge.node.id}\n                repo={edge}\n                isDark={isDark}\n                imgSrc={imgSrc}\n              />\n            );\n          })}\n        </div>\n\n        <br />\n\n        \n        <Button\n          text=\"More Projects\"\n          className=\"project-button\"\n          href={socialMediaLinks.github}\n          newTab\n        />\n      </div>\n    </Suspense>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}