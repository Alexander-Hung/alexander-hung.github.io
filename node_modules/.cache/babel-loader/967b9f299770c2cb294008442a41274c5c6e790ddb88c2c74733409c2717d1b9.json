{"ast":null,"code":"var _jsxFileName = \"/Users/alexander/Documents/Github/alexander-hung.github.io dev/src/containers/Main.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"../components/header/Header\";\nimport SplashScreen from \"./splashScreen/SplashScreen\";\nimport { splashScreen } from \"../portfolio\";\nimport { StyleProvider } from \"../contexts/StyleContext.js\";\nimport { useLocalStorage } from \"../hooks/useLocalStorage\";\nimport \"./Main.scss\";\nimport ProjectPresent from \"../components/projectPresent/ProjectPresent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst projects = [{\n  image: \"/demo.gif\",\n  title: \"Why-Fires\",\n  description: \"A full-stack application that uses NASA FIRMS MODIS and GADM boundary data to visualize to provide insightful and statistical analysis of wildfires.\",\n  github: \"https://github.com/Alexander-Hung/Why-fires\",\n  website: \"https://why-fires.com\"\n}, {\n  image: \"/assets/Digit-Recognizer-Competition.png\",\n  title: \"Digit Recognizer\",\n  description: \"Kaggle’s Digit Recognizer challenges you to build an MNIST handwritten-digit classifier for leaderboard ranking.\",\n  github: \"https://github.com/Alexander-Hung/Digit-Recognizer-Competition\",\n  website: \"https://www.kaggle.com/competitions/digit-recognizer\"\n}];\nconst Main = () => {\n  _s();\n  const darkPref = window.matchMedia(\"(prefers-color-scheme: dark)\");\n  const [isDark, setIsDark] = useLocalStorage(\"isDark\", darkPref.matches);\n  const [isShowingSplashAnimation, setIsShowingSplashAnimation] = useState(true);\n  useEffect(() => {\n    if (splashScreen.enabled) {\n      const splashTimer = setTimeout(() => setIsShowingSplashAnimation(false), splashScreen.duration);\n      return () => {\n        clearTimeout(splashTimer);\n      };\n    }\n  }, []);\n  const changeTheme = () => {\n    setIsDark(!isDark);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: isDark ? \"dark-mode\" : null,\n    children: /*#__PURE__*/_jsxDEV(StyleProvider, {\n      value: {\n        isDark: isDark,\n        changeTheme: changeTheme\n      },\n      children: isShowingSplashAnimation && splashScreen.enabled ? /*#__PURE__*/_jsxDEV(SplashScreen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ProjectPresent, {\n          projects: projects\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"rghpsch+4V7lC+t/3k8DiNFjDyw=\", false, function () {\n  return [useLocalStorage];\n});\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","useState","Header","SplashScreen","splashScreen","StyleProvider","useLocalStorage","ProjectPresent","jsxDEV","_jsxDEV","Fragment","_Fragment","projects","image","title","description","github","website","Main","_s","darkPref","window","matchMedia","isDark","setIsDark","matches","isShowingSplashAnimation","setIsShowingSplashAnimation","enabled","splashTimer","setTimeout","duration","clearTimeout","changeTheme","className","children","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alexander/Documents/Github/alexander-hung.github.io dev/src/containers/Main.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport Header from \"../components/header/Header\";\nimport SplashScreen from \"./splashScreen/SplashScreen\";\nimport {splashScreen} from \"../portfolio\";\nimport {StyleProvider} from \"../contexts/StyleContext.js\";\nimport {useLocalStorage} from \"../hooks/useLocalStorage\";\nimport \"./Main.scss\";\nimport ProjectPresent from \"../components/projectPresent/ProjectPresent\";\n\nconst projects = [\n  {\n    image: \"/demo.gif\",\n    title: \"Why-Fires\",\n    description: \"A full-stack application that uses NASA FIRMS MODIS and GADM boundary data to visualize to provide insightful and statistical analysis of wildfires.\",\n    github: \"https://github.com/Alexander-Hung/Why-fires\",\n    website: \"https://why-fires.com\"\n  },\n  {\n    image: \"/assets/Digit-Recognizer-Competition.png\",\n    title: \"Digit Recognizer\",\n    description: \"Kaggle’s Digit Recognizer challenges you to build an MNIST handwritten-digit classifier for leaderboard ranking.\",\n    github: \"https://github.com/Alexander-Hung/Digit-Recognizer-Competition\",\n    website: \"https://www.kaggle.com/competitions/digit-recognizer\"\n  }\n];\n\nconst Main = () => {\n  const darkPref = window.matchMedia(\"(prefers-color-scheme: dark)\");\n  const [isDark, setIsDark] = useLocalStorage(\"isDark\", darkPref.matches);\n  const [isShowingSplashAnimation, setIsShowingSplashAnimation] =\n    useState(true);\n\n  useEffect(() => {\n    if (splashScreen.enabled) {\n      const splashTimer = setTimeout(\n        () => setIsShowingSplashAnimation(false),\n        splashScreen.duration\n      );\n      return () => {\n        clearTimeout(splashTimer);\n      };\n    }\n  }, []);\n\n  const changeTheme = () => {\n    setIsDark(!isDark);\n  };\n\n  return (\n    <div className={isDark ? \"dark-mode\" : null}>\n      <StyleProvider value={{isDark: isDark, changeTheme: changeTheme}}>\n        {isShowingSplashAnimation && splashScreen.enabled ? (\n          <SplashScreen />\n        ) : (\n          <>\n            <Header />\n            <ProjectPresent projects={projects} />\n          </>\n        )}\n      </StyleProvider>\n    </div>\n  );\n};\n\nexport default Main;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAOC,MAAM,MAAM,6BAA6B;AAChD,OAAOC,YAAY,MAAM,6BAA6B;AACtD,SAAQC,YAAY,QAAO,cAAc;AACzC,SAAQC,aAAa,QAAO,6BAA6B;AACzD,SAAQC,eAAe,QAAO,0BAA0B;AACxD,OAAO,aAAa;AACpB,OAAOC,cAAc,MAAM,6CAA6C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzE,MAAMC,QAAQ,GAAG,CACf;EACEC,KAAK,EAAE,WAAW;EAClBC,KAAK,EAAE,WAAW;EAClBC,WAAW,EAAE,sJAAsJ;EACnKC,MAAM,EAAE,6CAA6C;EACrDC,OAAO,EAAE;AACX,CAAC,EACD;EACEJ,KAAK,EAAE,0CAA0C;EACjDC,KAAK,EAAE,kBAAkB;EACzBC,WAAW,EAAE,kHAAkH;EAC/HC,MAAM,EAAE,gEAAgE;EACxEC,OAAO,EAAE;AACX,CAAC,CACF;AAED,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAMC,QAAQ,GAAGC,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC;EAClE,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGlB,eAAe,CAAC,QAAQ,EAAEc,QAAQ,CAACK,OAAO,CAAC;EACvE,MAAM,CAACC,wBAAwB,EAAEC,2BAA2B,CAAC,GAC3D1B,QAAQ,CAAC,IAAI,CAAC;EAEhBD,SAAS,CAAC,MAAM;IACd,IAAII,YAAY,CAACwB,OAAO,EAAE;MACxB,MAAMC,WAAW,GAAGC,UAAU,CAC5B,MAAMH,2BAA2B,CAAC,KAAK,CAAC,EACxCvB,YAAY,CAAC2B,QACf,CAAC;MACD,OAAO,MAAM;QACXC,YAAY,CAACH,WAAW,CAAC;MAC3B,CAAC;IACH;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,WAAW,GAAGA,CAAA,KAAM;IACxBT,SAAS,CAAC,CAACD,MAAM,CAAC;EACpB,CAAC;EAED,oBACEd,OAAA;IAAKyB,SAAS,EAAEX,MAAM,GAAG,WAAW,GAAG,IAAK;IAAAY,QAAA,eAC1C1B,OAAA,CAACJ,aAAa;MAAC+B,KAAK,EAAE;QAACb,MAAM,EAAEA,MAAM;QAAEU,WAAW,EAAEA;MAAW,CAAE;MAAAE,QAAA,EAC9DT,wBAAwB,IAAItB,YAAY,CAACwB,OAAO,gBAC/CnB,OAAA,CAACN,YAAY;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAEhB/B,OAAA,CAAAE,SAAA;QAAAwB,QAAA,gBACE1B,OAAA,CAACP,MAAM;UAAAmC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACV/B,OAAA,CAACF,cAAc;UAACK,QAAQ,EAAEA;QAAS;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,eACtC;IACH;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACY;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEV,CAAC;AAACrB,EAAA,CApCID,IAAI;EAAA,QAEoBZ,eAAe;AAAA;AAAAmC,EAAA,GAFvCvB,IAAI;AAsCV,eAAeA,IAAI;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}